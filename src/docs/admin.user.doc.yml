paths:
  /v1/admin/users:
    post:
      tags:
        - [Admin]
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - mobileNumberOrEmail
                - password
              properties:
                mobileNumberOrEmail:
                  type: string
                  unique: true
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: at least one capital letter, one special character and one number
            example:
              mobileNumberOrEmail: "09175555555"
              password: Pass**11
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/responses/registerWithMobileNumber"
                  - $ref: "#/components/responses/registerWithEmail"
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          $ref: "#/components/responses/Forbidden"
    get:
      tags:
        - [Admin]
      summary: Get users
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: mobileNumber
          schema:
            type: string
          description: mobile number
        - in: query
          name: email
          schema:
            type: string
          description: email
        - in: query
          name: firstname
          schema:
            type: string
          description: firstname
        - in: query
          name: lastname
          schema:
            type: string
          description: lastname
        - in: query
          name: phoneNumber
          schema:
            type: string
          description: phone number
        - in: query
          name: isMobileNumberVerified
          schema:
            type: boolean
          description: if user verify his/her mobile number this filed will be true
        - in: query
          name: isEmailVerified
          schema:
            type: boolean
          description: if user verify his/her email this filed will be true
        - in: query
          name: sortBy
          schema:
            type: string
          description: sort by query in the form of field:desc/asc (default->createdAt:desc)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          default: 10
          description: Maximum number of users
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
      responses:
        "200":
          description: OK
          $ref: "#/components/responses/User"
        "400":
          description: Bad Request
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorized
          $ref: "#/components/responses/Unauthorized"
        "403":
          description: Forbidden
          $ref: "#/components/responses/Forbidden"

/v1/admin/users/{userId}:
  patch:
    tags:
      - [Admin]
    summary: update user with userId
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
        description: User id
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              mobileNumber:
                type: string
                patern: ^(0|0098|\+98)9(0[1-5]|[1 3]\d|2[0-2]|98)\d{7}$
              email:
                type: string
                format: email
              firstname:
                type: string
                maxLength: 46
              lastname:
                type: string
                maxLength: 46
              avatar:
                type: string
              phoneNumber:
                type: string
                patern: ^0[0-9]{2,}[0-9]{7,}$
              isEmailVerified:
                type: boolean
              isMobileNumberVerified:
                type: boolean
              address:
                type: object
                properties:
                  country:
                    type: string
                    maxlength: 30
                  province:
                    type: string
                    maxlength: 35
                  city:
                    type: string
                    maxlength: 35
                  street:
                    type: string
                    maxlength: 35
                  zipCode:
                    type: string
                    length: 10
            example:
              mobileNumber: "09175555555"
              email: andro@gmail.com
              firstname: Andro
              lastname: Torabi
              avatar: path/.....
              address:
                country: "Gorgia"
    responses:
      "200":
        description: OK
        $ref: "#/components/responses/User"
      "400":
        description: Bad Request
        $ref: "#/components/responses/BadRequest"
      "401":
        description: Unauthorized
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden
        $ref: "#/components/responses/Forbidden"
  get:
    tags:
      - [Admin]
    summary: Get user by user id
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
        description: User id
    responses:
      "200":
        description: OK
        $ref: "#/components/responses/User"
      "400":
        description: Bad Request
        $ref: "#/components/responses/BadRequest"
      "401":
        description: Unauthorized
        $ref: "#/components/responses/Unauthorized"
      "403":
        description: Forbidden
        $ref: "#/components/responses/Forbidden"
